name: ssh-keys

permissions:
  contents: write
  pull-requests: write
  issues: write

on:
  push:
    branches: ['*']
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  schedule:
    - cron: '30 * * * *'
  workflow_dispatch: 

jobs:
  create_pr:
    if: github.ref != 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          if gh pr view "${BRANCH}" --repo "${GITHUB_REPOSITORY}" >/dev/null 2>&1; then
            echo "PR already exists, skip creation."
            exit 0
          fi
          gh pr create \
            --title "Add new SSH key (${BRANCH})" \
            --body "Automated PR for key addition" \
            --base main \
            --head "${BRANCH}" \
            --repo "${GITHUB_REPOSITORY}" \
            --label "auto‑merge"

  validate_and_merge:
    needs: [create_pr]
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run validation script
        id: validate
        run: bash scripts/validate_keys.sh
      - name: Merge PR (gh cli)   # 只在 PR 场景执行
        if: success() && github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          echo "Merging PR #${PR_NUMBER}"
          gh pr merge "${PR_NUMBER}" --merge --admin --repo "${GITHUB_REPOSITORY}"

  deploy:
    needs: validate_and_merge
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy keys
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bash scripts/deploy_keys.sh

  cleanup:
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cleanup expired keys
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bash scripts/cleanup_expired.sh